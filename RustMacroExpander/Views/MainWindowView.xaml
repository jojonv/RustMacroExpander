<Controls:MetroWindow x:Class="RustMacroExpander.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RustMacroExpander.Views"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:e="clr-namespace:RustMacroExpander.Presentation.AttachedProps"
        xmlns:a="clr-namespace:RustMacroExpander.Presentation.Triggers"
        xmlns:c="clr-namespace:RustMacroExpander.Presentation.Converters"
        ResizeMode="CanResizeWithGrip"
        RightWindowCommandsOverlayBehavior="HiddenTitleBar"
        WindowButtonCommandsOverlayBehavior="Always"
        GlowBrush="{DynamicResource AccentColorBrush}"
        cal:Message.Attach="[Key F5] = [BuildWorkAround(InputBox.Text)]"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="300" Width="300">

    <Controls:MetroWindow.Resources>
        <!--When maximized window width is bigger than real screen width, which causes flyout to clip beyound screen-->
        <c:ResolutionWidthConverter x:Key="WidthConverter" />
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout Header="Settings" 
                             Position="Right" 
                             Theme="Adapt"
                             x:Name="SettingsView"
                             DataContext="{Binding SettingsViewModel}"
                             Width="{Binding RelativeSource={
                                            RelativeSource AncestorType=Controls:MetroWindow}, 
                                            Path=ActualWidth, Converter={StaticResource WidthConverter}}"
                             IsOpen="{Binding IsOpen, Mode=TwoWay}">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Height" Value="28" />
                        </Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="10,12,10,0" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="Margin" Value="0,0,0,5"/>
                        </Style>
                    </StackPanel.Resources>
                    <StackPanel>
                        <TextBlock>Compiler</TextBlock>
                        <TextBox Text="{Binding Compiler, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <StackPanel>
                        <TextBlock>Compiler flags</TextBlock>
                        <TextBox Text="{Binding CompilerBuildFlags, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </StackPanel> 
            </Controls:Flyout> 
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="settings" 
                    cal:Message.Attach="ChangeState(SettingsView.IsOpen)"/>
        </Controls:WindowCommands> 
    </Controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <!-- Input is used for serialization. `LostFocus` is called when window closes, `PropertyChanged` would need to be used 
            otherwise which is called unnecessarily often -->
        <TextBox x:Name="InputBox" 
                  Text="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  AcceptsReturn="True" 
                  AcceptsTab="True"
                  Grid.Column="0" 
                  Grid.Row="0"/>
        <GridSplitter Width="5" Grid.Column="1" HorizontalAlignment="Stretch" />
        <ScrollViewer 
            Grid.Row="0"
            Grid.Column="2"
            HorizontalScrollBarVisibility="Auto" 
            VerticalScrollBarVisibility="Auto">
            <TextBlock x:Name="m_output" 
                 FontFamily="Consolas"
                 e:TagsParser.Content="{Binding Content}"/>
        </ScrollViewer>
        <StackPanel
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.ColumnSpan="3">
            <Button 
                cal:Message.Attach="Build(InputBox.Text)"
                Width="80" 
                Height="30" 
                Grid.Column="0" 
                HorizontalAlignment="Left" 
                Content="Build(F5)"
                BorderThickness="2"
                Style="{DynamicResource SquareButtonStyle}">
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <cal:ActionMessage MethodName="Build">
                            <cal:Parameter Value="{Binding ElementName=m_input, Path=Text}" />
                        </cal:ActionMessage>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
                <!--<Button Width="50" Height="30" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="1" Command="{Binding Views.Input.RunCommand}">-->
            </Button>
            <TextBlock VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       Text="{Binding Version}"/>
        </StackPanel>
    </Grid>
</Controls:MetroWindow>
